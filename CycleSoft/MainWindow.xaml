<Window x:Class="CycleSoft.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:CycleSoft"
    Title="CycleSoft Ride Tracker" Width="680" MinWidth="680" BorderThickness="2" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" Height="450" MinHeight="450">

    <!--Create list of enumeration values-->
    <!--    
    <Window.Resources>
        <ObjectDataProvider x:Key="powerOptionEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="local:powerAvgOptions"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
-->
    <Window.Resources>
        <Style x:Key="NameCellStyle" TargetType="DataGridCell">
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
    </Window.Resources>

    <Grid>
        <TabControl Name="tabControl1">
            <TabItem Header="Main Window" Name="tabItem1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0*" />
                        <RowDefinition Height="427*" />
                    </Grid.RowDefinitions>
                    <DataGrid AutoGenerateColumns="False" Height="119" ItemsSource="{Binding}" Margin="6,58,0,0" Name="dataGridUsers" VerticalAlignment="Top" Grid.Row="1" HorizontalAlignment="Left" Width="642">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding firstName}" Header="First" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding lastName}" Header="Last" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding points}" Header="Points" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding hr}" Header="HR" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding speed, StringFormat={}{0:0.0}}" Header="Spd" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding wheelSize}" Header="WhlSize" />
                            <DataGridTextColumn Binding="{Binding cad}" Header="CAD" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding instPower}" Header="Inst. Power" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding avgPower, StringFormat={}{0:0}}" Header="Avg. Power" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding avgPowerTime}" Header="AvgSec" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Background="LightGreen" Content="Start" Height="38" Name="button_Start" VerticalAlignment="Top" Click="button_Start_Click" HorizontalAlignment="Left" Width="196" Margin="5,10,0,0" Grid.Row="1" />
                    <ComboBox Height="23" Margin="6,208,0,0" Name="cbSelectWorkout" VerticalAlignment="Top" Grid.Row="1" SelectionChanged="cbSelectWorkout_SelectionChanged" HorizontalAlignment="Left" Width="282" />
                    <Button Content="Start Workout" Height="23" Margin="293,208,0,0" Name="bStartWorkout" Click="bStartWorkout_Click" Grid.Row="1" MouseRightButtonUp="bStartWorkout_MouseRightButtonUp" IsEnabled="False" VerticalAlignment="Top" HorizontalAlignment="Left" Width="139" />
                    <Button Content="Launch Selected Users" Height="23" HorizontalAlignment="Left" Margin="509,179,0,0" Name="buttonLaunchUsers" VerticalAlignment="Top" Width="139" Click="LaunchUserWindows" Grid.Row="1" />
                    <Button Content="Remove Selected" Height="23" HorizontalAlignment="Left" Margin="5,179,0,0" Name="buttonRemoveUsers" VerticalAlignment="Top" Width="120" Click="buttonRemoveUsers_Click" Grid.Row="1" ToolTip="Remove User for this Run, will be back next time program runs" />
                    <Canvas Grid.Row="1" Margin="6,236,11.2,40.6" Name="polylineCanvas" Background="Black">
                        <Path Stroke="#000000FF" StrokeThickness="0.5" Fill="SteelBlue">
                            <Path.Data>
                                <PathGeometry x:Name="polyline">
                                    <PathGeometry.Transform>
                                        <ScaleTransform
                                        ScaleX="{Binding ActualWidth, ElementName=polylineCanvas}"
                                        ScaleY="{Binding ActualHeight, ElementName=polylineCanvas}"/>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Canvas>
                    <Slider Grid.Row="1" Margin="5,0,11.2,8.6" Name="slider1" Value="1" SmallChange="0.1" SelectionStart="1" SelectionEnd="1" Maximum="2" Minimum="1" ValueChanged="slider1_ValueChanged" Height="27" VerticalAlignment="Bottom" />
                    <Button Content="Save Selected Users" Grid.Row="1" Height="23" HorizontalAlignment="Left" Margin="255,179,0,0" Name="buttonSaveUser" VerticalAlignment="Top" Width="120" Click="buttonSaveUser_Click" />
                    <Label x:Name="lbl_ANTStatus" Content="" HorizontalAlignment="Left" Margin="220,16,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Width="684"/>
                    <Button Content="Delete Selected Users" Height="23" HorizontalAlignment="Left" Margin="130,179,0,0" x:Name="buttonDeleteUsers" VerticalAlignment="Top" Width="120" Click="buttonDeleteUsers_Click" Grid.Row="1" ToolTip="Permanently Delete User from System" />
                    <Button Content="End Workout" Height="23" Margin="437,208,0,0" x:Name="bEndWorkout" Click="bEndWorkout_Click" Grid.Row="1" MouseRightButtonUp="bStartWorkout_MouseRightButtonUp" IsEnabled="False" VerticalAlignment="Top" HorizontalAlignment="Left" Width="139" />
                    <Button Content="Modify Selected User" Grid.Row="1" Height="23" HorizontalAlignment="Left" Margin="380,179,0,0" x:Name="buttonModUser" VerticalAlignment="Top" Width="120" Click="buttonModUser_Click" />
                </Grid>
            </TabItem>
            <TabItem Header="User Config" Name="tabItem2">
                <Grid Margin="0" Height="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10*" />
                        <ColumnDefinition Width="415*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>
                    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="0,6,24,2" Name="dataGridPower" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding sensorAddress}" Header="Power Sensor ID" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding powerInst}" Header="Current Power" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding bAlive}" Header="Alive" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                            <DataGridTextColumn Binding="{Binding bUsed}" Header="InUse" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                            <!--
                            <DataGridTextColumn Binding="{Binding powerAvg}" Header="Avg. Power" IsReadOnly="True" />
                            <DataGridComboBoxColumn Header="FilterTime" ItemsSource="{Binding Source={StaticResource powerOptionEnum}}" SelectedItemBinding="{Binding avgPowerTime}" />
-->
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="0,4,24,4" Name="dataGridHR" Grid.Column="1" Grid.Row="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding sensorAddress}" Header="Heart Rate Sensor ID" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding hb}" Header="Current Heart Rate" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding bAlive}" Header="Alive" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                            <DataGridTextColumn Binding="{Binding bUsed}" Header="InUse" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                            <!--
                            <DataGridTextColumn Binding="{Binding currentStatus}" Header="Status" IsReadOnly="True" />
-->
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding}" HorizontalContentAlignment="Center" Margin="0,2,24,4" Name="dataGridSpdCad" Grid.Column="1" Grid.Row="2">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding sensorAddress}" Header="Speed Cadence Sensor ID" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding cadInst}" Header="Cadence" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                            <DataGridTextColumn Binding="{Binding spdInst, StringFormat={}{0:0.0}}" Header="Speed" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                            <DataGridTextColumn Binding="{Binding wheelSize}" Header="WheelSize" TextBlock.TextAlignment="Center" />
                            <DataGridTextColumn Binding="{Binding bAlive}" Header="Alive" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                            <DataGridTextColumn Binding="{Binding bUsed}" Header="InUse" IsReadOnly="True" TextBlock.TextAlignment="Center" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <TextBox Height="23" HorizontalAlignment="Left" Margin="0,2,0,0" Name="textBoxFirstName" VerticalAlignment="Top" Width="47" Text="First" Grid.Column="1" Grid.Row="3" GotFocus="textBoxFirstName_GotFocus" />
                    <TextBox Height="23" HorizontalAlignment="Left" Margin="53,2,0,0" Name="textBoxLastName" VerticalAlignment="Top" Width="54" Text="Last" Grid.Column="1" Grid.Row="3" GotFocus="textBoxLastName_GotFocus" />
                    <TextBox Height="23" HorizontalAlignment="Left" Margin="113,2,0,0" Name="textBoxFTP" Text="FTP" VerticalAlignment="Top" Width="54" Grid.Column="1" Grid.Row="3" GotFocus="textBoxFTP_GotFocus" />
                    <Button Content="Add User with Selected" HorizontalAlignment="Right" Margin="0,0.8,23.8,0" Name="buttonAddUser" Width="139" Click="buttonAddUser_Click" Grid.Column="1" Grid.Row="3" Height="23" VerticalAlignment="Top" />
                </Grid>
            </TabItem>
            <TabItem Header="Workout Config" Name="tabItem3">
                <Grid>
                    <ComboBox Height="23" x:Name="cbSelectEditWorkout" VerticalAlignment="Top" SelectionChanged="cbSelectEditWorkout_SelectionChanged" HorizontalAlignment="Left" Width="282" />
                    <Canvas x:Name="polylineEditCanvas" Background="Black" Width="642" Margin="9,28,8.2,250.6">
                        <Path Stroke="#000000FF" StrokeThickness="0.5" Fill="SteelBlue">
                            <Path.Data>
                                <PathGeometry x:Name="polyline1">
                                    <PathGeometry.Transform>
                                        <ScaleTransform
            						ScaleX="{Binding ActualWidth, ElementName=polylineEditCanvas}"
            						ScaleY="{Binding ActualHeight, ElementName=polylineEditCanvas}"/>
                                    </PathGeometry.Transform>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Grid>
            </TabItem>
            <TabItem Header="Video" Name="tabItem4">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="166*" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="166*" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="166*" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="121*" />
                        <RowDefinition Height="49" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="13*" MinWidth="50" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="300"/>
                    </Grid.ColumnDefinitions>
                    <MediaElement Margin="5,6,6,0" Name="mediaElement1" Source="" UnloadedBehavior="Manual" LoadedBehavior="Manual" MinHeight="200" Grid.ColumnSpan="2" MediaOpened="mediaElement1_MediaOpened" Stretch="Fill" Grid.RowSpan="7" />
                    <Button Content="Start Workout" Height="32" HorizontalAlignment="Left" Margin="5,0,0,6.4" Name="bStartWorkout2" VerticalAlignment="Bottom" Width="104" Click="bStartWorkout_Click" Grid.Row="7" />
                    <Button Content="End Workout" Height="32" HorizontalAlignment="Left" Margin="114,0,0,6.4" Name="bEndWorkout2" VerticalAlignment="Bottom" Width="92" Click="bEndWorkout_Click" Grid.Row="7" />
                    <CheckBox Content="Mute" Grid.Row="7" Height="16" HorizontalAlignment="Left" Margin="220,0,0,10.4" Name="checkBox1" VerticalAlignment="Bottom" Checked="checkBox1_Checked" Unchecked="checkBox1_Unchecked" />
                    <local:UserPointPanel Grid.Column="3" Margin="0,0,0,0" x:Name="userPointPanel1" />
                    <local:UserPointPanel Margin="0,0,0,0" x:Name="userPointPanel2" Grid.Column="3" Grid.Row="2" />
                    <local:UserPointPanel Margin="0" x:Name="userPointPanel3" Grid.Column="3" Grid.Row="4" />
                    <local:UserPointPanel x:Name="userPointPanel4" Grid.Column="3" Grid.Row="6" Grid.RowSpan="2" Margin="0,0,0,0" />
                    <TextBox FontSize="30" FontStretch="ExtraCondensed" Height="42" HorizontalContentAlignment="Center" Margin="340,0,0,7" Name="textBoxTotalTime" Text="1:23:13" TextAlignment="Center" VerticalAlignment="Bottom" VerticalContentAlignment="Stretch" Grid.Row="7" Width="175" HorizontalAlignment="Left" />
                    <TextBox FontSize="30" FontStretch="ExtraCondensed" HorizontalContentAlignment="Center" Margin="530,0,5,7" Name="textBoxSegmentTime" Text="Segment Left: 1:88:88" TextAlignment="Center" VerticalContentAlignment="Center" Height="42" VerticalAlignment="Bottom" Width="326" Grid.Row="7" Grid.ColumnSpan="2" />
                    <GridSplitter Grid.Column="2" Grid.RowSpan="5" Height="320" HorizontalAlignment="Center" Margin="0,100,0,54" Name="gridSplitter1" VerticalAlignment="Stretch" Width="10" />
                    <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,0,0" Name="gridSplitter2" VerticalAlignment="Center" Height ="10" Width="Auto" Grid.Column="3" ResizeDirection="Rows" Grid.ColumnSpan="1" ResizeBehavior="PreviousAndNext"/>
                    <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" Margin="0,0,0,0" Name="gridSplitter3" VerticalAlignment="Center" Height ="10" Width="Auto" Grid.Column="3" ResizeDirection="Rows" Grid.ColumnSpan="1" ResizeBehavior="PreviousAndNext"/>
                    <GridSplitter Grid.Row="5" HorizontalAlignment="Stretch" Margin="0,0,0,0" Name="gridSplitter4" VerticalAlignment="Center" Height ="10" Width="Auto" Grid.Column="3" ResizeDirection="Rows" Grid.ColumnSpan="1" ResizeBehavior="PreviousAndNext" />
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
